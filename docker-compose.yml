services:

  api_system_1:
    image: api_system_1:dev
    container_name: api_system_1
    build:
      dockerfile: api_system_1/Dockerfile
    command: uvicorn api_system_1.main:app --reload --workers 1 --host 0.0.0.0 --port 8001
    volumes:
      - .:/usr/src/app
    ports:
      - 8001:8001
    env_file:
      - api_system_1/.env
    depends_on:
      - db_postgres_1
      - redis_data_store
      - rabbitmq_infra

  api_system_2:
    image: api_system_2:dev
    container_name: api_system_2
    build:
      dockerfile: api_system_2/Dockerfile
    command: uvicorn api_system_2.main:app --reload --workers 1 --host 0.0.0.0 --port 8001
    volumes:
      - .:/usr/src/app
    ports:
      - 8002:8001
    env_file:
      - api_system_2/.env
    depends_on:
      - db_postgres_2
      - redis_data_store
      - rabbitmq_infra

  redis_data_store:
    image: redis:6.2.5-alpine
    container_name: redis_data_store
    volumes:
      - redis-data:/data
    ports:
      - 6379:6379

  db_postgres_1:
    image: postgres:16.1
    container_name: db_postgres_1
    env_file:
      - postgres_db_1/.env
    volumes:
      - postgres-db1:/var/lib/postgresql/data
    ports:
        - 5432:5432

  db_postgres_2:
    image: postgres:16.1
    container_name: db_postgres_2
    env_file:
      - postgres_db_2/.env
    volumes:
      - postgres-db2:/var/lib/postgresql/data
    ports:
        - 5433:5432

  db_postgres_endput:
    image: postgres:16.1
    container_name: db_postgres_endput
    env_file:
      - postgres_db_endput/.env
    volumes:
      - postgres-db-endput:/var/lib/postgresql/data
    ports:
        - 5434:5432

  rabbitmq_infra:
    image: rabbitmq-delayed-message-exchange:dev
    build:
      dockerfile: rabbitmq_infra/Dockerfile
    container_name: rabbitmq_infra
    env_file:
      - rabbitmq_infra/.env
    ports:
      - "5672:5672"
      - "15672:15672"

  queue_consumer:
    image: queue_consumer:dev
    container_name: queue_consumer
    env_file:
      - queue_consumer/.env
    build:
      dockerfile: queue_consumer/Dockerfile
    command: 'python -u main.py'
    depends_on:
      - rabbitmq_infra
      - mongodb
      - db_postgres_endput

  mongodb:
    image: mongo:7.0.5
    container_name: mongodb
    env_file:
      - mongodb/.env
    volumes:
      - mongodb-data:/data/db
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express:1.0.2-20
    container_name: mongo-express
    env_file:
      - mongo_express/.env
    depends_on:
      - mongodb 
    ports:
      - 8081:8081

volumes:
  postgres-db1:
    name: db_postgres_1
  postgres-db2:
    name: db_postgres_2
  postgres-db-endput:
    name: db_postgres_endput
  mongodb-data:
    name: mongodb-data
  redis-data:
    name: redis-data

